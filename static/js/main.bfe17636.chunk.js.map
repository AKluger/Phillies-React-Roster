{"version":3,"sources":["components/Header/header.js","components/PlayerCard/PlayerCard.js","components/Main/Main.js","components/Navbar/Navbar.js","components/Footer/footer.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","PlayerCard","onClick","checkScore","id","alt","name","src","image","Main","children","Navbar","message","score","topScore","Footer","href","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shufflePlayers","players","state","slice","i","length","rand","Math","floor","random","_ref","setState","gameReset","guesses","console","log","includes","concat","toConsumableArray","bind","assertThisInitialized","_this2","Navbar_Navbar","Header_header","components_Main_Main","map","player","PlayerCard_PlayerCard","key","Footer_footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bfe17636.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nfunction Header(props) {\n    return <header className=\"header\">\n    <h1> Phillies Roster Clicky Game</h1>\n    <h2>Click on a player to earn a point, but don't click on anyone more than once!</h2>\n    </header>\n}\n\nexport default Header;","import React from \"react\";\nimport \"./card.css\"\nfunction PlayerCard(props) {\n  return (\n    <div className=\"card rounded\" onClick={() => props.checkScore(props.id)}>\n        <img alt={props.name} src={props.image} />\n    </div>\n  );\n}\n\nexport default PlayerCard;\n","import React from \"react\";\nimport \"./Main.css\";\n\nfunction Main(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Main;","import React from \"react\";\nimport \"./navbar.css\"\n// pass down game state if new game \"\" else if guess correct or guess wrong...\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg d-flex justify-content-between\">\n            <span className=\"navbar-brand\">Phillies Clicky</span>\n            <span className=\"nav-item\">\n                {props.message}\n            </span>\n            <span className=\"nav-item\">\n                Score: {props.score} | Top Score: {props.topScore}\n            </span>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./footer.css\";\n\nfunction Footer(props) {\n    return <footer className=\"footer\">\n    <span> Built By:  \n    <a href=\"https://github.com/AKluger\" className=\"footer-link\">  A.I.</a></span>\n    </footer>\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Header from \"./components/Header/header\";\nimport PlayerCard from \"./components/PlayerCard/PlayerCard\";\n// import Wrapper from \"./components/Wrapper\";\nimport Main from \"./components/Main/Main\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/footer\";\nimport players from \"./players.json\";\n\nclass App extends Component {\n  // Setting this.state.players to the players json array\n  constructor() {\n    super();\n    this.state = {\n      players,\n      score: 0,\n      topScore: 0,\n      guesses: [],\n      message: \"Click a player to begin!\"\n    };\n\n    this.shufflePlayers = this.shufflePlayers.bind(this)\n  }\n \n  shufflePlayers = () => {\n    const players = this.state.players.slice()\n    for (let i = players.length - 1; i > 0; i--) {\n      const rand = Math.floor(Math.random() * (i + 1));\n      [players[i], players[rand]] = [players[rand], players[i]];\n    }\n    this.setState({ players: players });\n  };\n\n  gameReset = () => {\n    this.setState({\n      score: 0,\n      guesses: [],\n      message: \"You guessed incorrectly\"\n    })\n  }\n\n  // if not in the guess array increment score and run topscore function,\n  // else init new Game.\n  checkScore = id => {\n    //   const guesses = \n    console.log(id)\n    if (this.state.guesses.includes(id)) { this.gameReset() }\n\n    else {\n      this.setState({\n        guesses: [...this.state.guesses, id],\n        score: this.state.score + 1,\n        message: \"You guessed correctly!\",\n      });\n      if (this.state.score === this.state.topScore) { this.setState({ topScore: this.state.topScore+1}) }\n      this.shufflePlayers()\n    }\n  };\n\n  // Map over this.state.players and render a PlayerCard component for each player object\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topScore={this.state.topScore} message={this.state.message}></Navbar>\n        <Header></Header>\n        <Main>\n          {this.state.players.map(player => (\n            <PlayerCard\n              shufflePlayers={this.shufflePlayers}\n              checkScore={this.checkScore}\n              id={player.id}\n              key={player.id}\n              name={player.name}\n              image={player.image}\n            />\n          ))}\n        </Main>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}